"""Triangular, pentagonal, and hexagonal
Problem 45 
Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

    Triangle        Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
    Pentagonal      Pn=n(3n−1)/2        1, 5, 12, 22, 35, ...
    Hexagonal       Hn=n(2n−1)      1, 6, 15, 28, 45, ...
    It can be verified that T285 = P165 = H143 = 40755.

    Find the next triangle number that is also pentagonal and
    hexagonal."""

# Resource for solving this problem
# https://en.wikipedia.org/wiki/Pentagonal_number

from time import clock
from math import sqrt

# REF: https://en.wikipedia.org/wiki/Triangular_number
def isTri(n):
    return (sqrt(8*n+1)-1)/2

# REF: http://www.divye.in/2012/07/how-do-you-determine-if-number-n-is.html
# This provides a formula for discovering if a number is pentagonal
def isPent(n):
    return sqrt(24*n+1)%6 == 5

# REF: https://en.wikipedia.org/wiki/Hexagonal_number
def isHex(n):
    return (sqrt(8*n+1)+1)/4

size=100000
# Define tri, pent, and hexagonal lists
t=[int((n*(n+1))/2) for n in range(1,size)]
p=[int((n*(3*n-1))/2) for n in range(1,size)]
h=[int(n*(2*n-1)) for n in range(1,size)]

while True:
    input("Enter to start")
    start=clock()
    print("Looking for number that is Trianglar, Pentagonal, AND hexagonal")
    for i in t:
        if isTri(i) and isPent(i) and isHex(i):
            print("Found match!\n T = P = H = {}".format(i))
    print("The program took {} seconds to run".format(clock()-start))

    #Takes too long
    # Maybe use map? Map pent, hex, and tri numbers with their indices?
    x="""for i in range(len(t)):
        for j in range(len(p)):
            if t[i]==p[j]:
                for k in range(len(h)):
                    if t[i]==p[j]==h[k]:
                        print("Found match!\n T-{} = P-{} = H-{} = {}".format(i+1,j+1,k+1,h[k]))

"""
