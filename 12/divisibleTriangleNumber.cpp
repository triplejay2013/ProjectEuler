/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

1: 1
3: 1,3
6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

closed form for triangular number sequence is n(n+1)/2

answer: 76576500 at index 12375, 576 divisors
   */

#include <iostream>
#include <cmath>
#include <vector>

using namespace std;

vector<long> generateSequence(const long& lowerLimit, const long& upperLimit){
	vector<long> ret;
	long triNum;
	for(long i = lowerLimit; i <= upperLimit; ++i){
		triNum = (i*(i+1))/2;
		ret.push_back(triNum);
	}
	return ret;
}

//returns triangle number with the specified num of divisors
long findLargestNumOfDivisors(const vector<long>& vec, const long& divisorLimit, const long& lowerLimit){
	printf("Finding first triangle number which has %d divisors\n", divisorLimit);
	int index = lowerLimit;
	for(long triNum : vec){
		long counter = 0;
		for(long i = 1; i <= triNum; ++i){
			if(triNum%i == 0) ++counter;
			if(counter == divisorLimit && i == triNum) return triNum;
		}
		if(counter >= divisorLimit/2) printf("Triangle Number %d at index %d has a divisor count of %d\n",triNum,index,counter);
		++index;
	}
	return -1;
}

int main(){
	long upperLimit;
	long lowerLimit;
	long divisorLimit;
	char input;

	while(true){
		cout << "Lower Limit for triangualr number sequence: ";
		cin >>lowerLimit;
		cout << endl;
		cout << "Upper Limit for triangular number sequence(from 1 to input value): ";
		cin >> upperLimit;
		cout << endl;
		cout << "Divisor limit: ";
		cin >> divisorLimit;
		cout << endl;

		vector<long> triNums = generateSequence(lowerLimit, upperLimit);
		long largest = findLargestNumOfDivisors(triNums, divisorLimit, lowerLimit);
		if(largest < 0) cout << "Could not find a match\n";
		else printf("The Triangle number %d has a divisor count of %d: \n", largest, divisorLimit);

		cout << "Press q to quit, any other letter to continue\n\n";
		cin >> input;
		if(input == 'q' || input == 'Q') break;
	}

	return 0;
}
